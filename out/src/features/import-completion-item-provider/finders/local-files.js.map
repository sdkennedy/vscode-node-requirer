{"version":3,"sources":["../../../../../src/features/import-completion-item-provider/finders/local-files.js"],"names":[],"mappings":";;;;;kBAawB,a;;AAbxB;;AACA;;;;AACA;;;;AAEA,SAAS,cAAT,CAAwB,OAAxB,EAAiC,IAAjC,EAAuC;AACnC,QAAM,eAAe,oBAAS,OAAT,EAAkB,IAAlB,CAArB;AACA,QAAI,aAAa,UAAb,CAAwB,KAAxB,CAAJ,EAAoC;AAChC,eAAO,YAAP;AACH,KAFD,MAEO;AACH,sBAAY,YAAZ;AACH;AACJ;;AAEc,SAAS,aAAT,CAAuB,cAAvB,EAAuC,QAAvC,EAAiD;AAC5D,QAAM,UAAU,mBAAQ,QAAR,CAAhB;AACA,WAAO,8BAAkB,cAAlB,EACF,IADE,CACG,iBAAS;AACX,YAAM,SAAS,MAAM,GAAN,CAAU,gBAAE,cAAF,EAAkB,OAAlB,CAAV,CAAf;AACA,eAAO,MAAP;AACH,KAJE,CAAP;AAKH","file":"local-files.js","sourcesContent":["import {dirname, join, relative} from 'path';\nimport getDirectoryFiles from './directory-files';\nimport {bind as $} from '../../../util';\n\nfunction toRelativePath(dirPath, file) {\n    const relativePath = relative(dirPath, file);\n    if (relativePath.startsWith('../')) {\n        return relativePath;\n    } else {\n        return `./${relativePath}`;\n    }\n}\n\nexport default function getLocalFiles(packageDirPath, fileName) {\n    const dirPath = dirname(fileName);\n    return getDirectoryFiles(packageDirPath)\n        .then(files => {\n            const result = files.map($(toRelativePath, dirPath));\n            return result;\n        });\n}"]}